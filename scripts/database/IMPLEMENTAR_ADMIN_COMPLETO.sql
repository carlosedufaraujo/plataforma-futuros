-- IMPLEMENTAR SISTEMA DE ADMIN COMPLETO
-- Adicionar pol√≠ticas RLS para admin ver/gerenciar TUDO

DO $$
BEGIN
    RAISE NOTICE 'üöÄ IMPLEMENTANDO SISTEMA DE ADMIN...';
    
    -- 1. GARANTIR QUE CARLOS EDUARDO √â ADMIN
    UPDATE users SET role = 'admin' WHERE email = 'carloseduardo@acexcapital.com';
    
    RAISE NOTICE '‚úÖ PASSO 1: Carlos Eduardo definido como admin';
    
    -- 2. REMOVER POL√çTICAS DE ADMIN ANTIGAS (SE EXISTIREM)
    DROP POLICY IF EXISTS "admin_can_view_all_users" ON users;
    DROP POLICY IF EXISTS "admin_can_manage_all_users" ON users;
    DROP POLICY IF EXISTS "admin_can_view_all_brokerages" ON brokerages;
    DROP POLICY IF EXISTS "admin_can_manage_all_brokerages" ON brokerages;
    DROP POLICY IF EXISTS "admin_can_view_all_user_brokerages" ON user_brokerages;
    DROP POLICY IF EXISTS "admin_can_manage_all_user_brokerages" ON user_brokerages;
    DROP POLICY IF EXISTS "admin_can_view_all_positions" ON positions;
    DROP POLICY IF EXISTS "admin_can_manage_all_positions" ON positions;
    DROP POLICY IF EXISTS "admin_can_view_all_transactions" ON transactions;
    DROP POLICY IF EXISTS "admin_can_manage_all_transactions" ON transactions;
    DROP POLICY IF EXISTS "admin_can_view_all_options" ON options;
    DROP POLICY IF EXISTS "admin_can_manage_all_options" ON options;
    
    RAISE NOTICE '‚úÖ PASSO 2: Pol√≠ticas antigas de admin removidas';
    
    -- 3. CRIAR POL√çTICAS DE ADMIN PARA USERS (VER E GERENCIAR TODOS)
    CREATE POLICY "admin_can_view_all_users" ON users
        FOR SELECT USING (
            auth.uid() IN (SELECT id FROM users WHERE role = 'admin')
        );
    
    CREATE POLICY "admin_can_manage_all_users" ON users
        FOR ALL USING (
            auth.uid() IN (SELECT id FROM users WHERE role = 'admin')
        );
    
    RAISE NOTICE '‚úÖ PASSO 3: Pol√≠ticas de admin criadas para USERS';
    
    -- 4. CRIAR POL√çTICAS DE ADMIN PARA BROKERAGES
    CREATE POLICY "admin_can_view_all_brokerages" ON brokerages
        FOR SELECT USING (
            auth.uid() IN (SELECT id FROM users WHERE role = 'admin')
        );
    
    CREATE POLICY "admin_can_manage_all_brokerages" ON brokerages
        FOR ALL USING (
            auth.uid() IN (SELECT id FROM users WHERE role = 'admin')
        );
    
    RAISE NOTICE '‚úÖ PASSO 4: Pol√≠ticas de admin criadas para BROKERAGES';
    
    -- 5. CRIAR POL√çTICAS DE ADMIN PARA USER_BROKERAGES
    CREATE POLICY "admin_can_view_all_user_brokerages" ON user_brokerages
        FOR SELECT USING (
            auth.uid() IN (SELECT id FROM users WHERE role = 'admin')
        );
    
    CREATE POLICY "admin_can_manage_all_user_brokerages" ON user_brokerages
        FOR ALL USING (
            auth.uid() IN (SELECT id FROM users WHERE role = 'admin')
        );
    
    RAISE NOTICE '‚úÖ PASSO 5: Pol√≠ticas de admin criadas para USER_BROKERAGES';
    
    -- 6. CRIAR POL√çTICAS DE ADMIN PARA POSITIONS
    CREATE POLICY "admin_can_view_all_positions" ON positions
        FOR SELECT USING (
            auth.uid() IN (SELECT id FROM users WHERE role = 'admin')
        );
    
    CREATE POLICY "admin_can_manage_all_positions" ON positions
        FOR ALL USING (
            auth.uid() IN (SELECT id FROM users WHERE role = 'admin')
        );
    
    RAISE NOTICE '‚úÖ PASSO 6: Pol√≠ticas de admin criadas para POSITIONS';
    
    -- 7. CRIAR POL√çTICAS DE ADMIN PARA TRANSACTIONS
    CREATE POLICY "admin_can_view_all_transactions" ON transactions
        FOR SELECT USING (
            auth.uid() IN (SELECT id FROM users WHERE role = 'admin')
        );
    
    CREATE POLICY "admin_can_manage_all_transactions" ON transactions
        FOR ALL USING (
            auth.uid() IN (SELECT id FROM users WHERE role = 'admin')
        );
    
    RAISE NOTICE '‚úÖ PASSO 7: Pol√≠ticas de admin criadas para TRANSACTIONS';
    
    -- 8. CRIAR POL√çTICAS DE ADMIN PARA OPTIONS
    CREATE POLICY "admin_can_view_all_options" ON options
        FOR SELECT USING (
            auth.uid() IN (SELECT id FROM users WHERE role = 'admin')
        );
    
    CREATE POLICY "admin_can_manage_all_options" ON options
        FOR ALL USING (
            auth.uid() IN (SELECT id FROM users WHERE role = 'admin')
        );
    
    RAISE NOTICE '‚úÖ PASSO 8: Pol√≠ticas de admin criadas para OPTIONS';
    
    -- 9. VERIFICAR TOTAL DE POL√çTICAS AP√ìS ADMIN
    DECLARE
        policy_count INTEGER;
    BEGIN
        SELECT count(*) INTO policy_count 
        FROM pg_policies 
        WHERE schemaname = 'public';
        
        RAISE NOTICE 'üìä TOTAL DE POL√çTICAS AP√ìS ADMIN: %', policy_count;
    END;
    
    RAISE NOTICE 'üéâ SISTEMA DE ADMIN IMPLEMENTADO COM SUCESSO!';
    RAISE NOTICE 'üëë Carlos Eduardo agora tem acesso TOTAL ao sistema:';
    RAISE NOTICE '   ‚úÖ Ver todos os usu√°rios';
    RAISE NOTICE '   ‚úÖ Gerenciar todas as corretoras';
    RAISE NOTICE '   ‚úÖ Visualizar todas as posi√ß√µes/transa√ß√µes';
    RAISE NOTICE '   ‚úÖ Administrar user_brokerages';
    RAISE NOTICE '   ‚úÖ Controle total do sistema';
    
END $$; 